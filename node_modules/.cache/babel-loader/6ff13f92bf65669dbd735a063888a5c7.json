{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giojo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Development\\\\Herolo_Assign\\\\react-weather-app-master\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport CurrentWeather from './components/CurrentWeather/CurrentWeather';\nimport ForecastDetails from './components/ForecastDetails/ForecastDetails';\nimport apiUtils from './api/apiUtils';\nimport { css } from '@emotion/core';\nimport BounceLoader from 'react-spinners/BounceLoader';\nimport './styles/App.css';\nimport { useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; //import { Container, Row, Col } from 'react-bootstrap'\n\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './theme/GlobalStyle';\nimport Theme from './theme/theme'; //import HomePage from './pages/HomePage'\n//import FavoritesPage from './pages/FavoritesPage'\n\nimport PageNotFound from './pages/PageNotFound'; // import Header from './components/Header';\n\nconst override = css`\n  display: block;\n  margin: auto;\n`;\n\nfunction App() {\n  const [load, setLoad] = useState(true);\n  const [locationName, setLocationName] = useState();\n  const [forecast, setForecast] = useState();\n  const [currentConditions, setCurrentConditions] = useState();\n\n  const getLocationName = locationKey => {\n    fetch(`https://dataservice.accuweather.com/locations/v1/${locationKey}?apikey=${apiUtils.accuWeather.apiKey}`).then(response => response.json()).then(result => setLocationName({\n      country: result.Country.LocalizedName,\n      city: result.LocalizedName\n    }));\n  };\n\n  const getWeekForecast = locationKey => {\n    fetch(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${apiUtils.accuWeather.apiKey}&metric=true`).then(response => response.json()).then(result => {\n      setForecast(result.DailyForecasts);\n    });\n  };\n\n  const getCurrentConditions = locationKey => {\n    fetch(`https://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=${apiUtils.accuWeather.apiKey}&details=true`).then(response => response.json()).then(result => {\n      setCurrentConditions(result[0]);\n    });\n  };\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n\n    if (window.location.search.length === 0) {\n      fetch('https://ipfind.co/me?auth=' + apiUtils.ipfind.apiKey).then(response => response.json()).then(result => {\n        fetch('https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=' + apiUtils.accuWeather.apiKey + '&q=' + result.latitude + ',' + result.longitude).then(res => res.json()).then(json => {\n          window.location.search = `?locationKey=${json.Key}`;\n        });\n      });\n    } else if (urlParams.has('locationKey')) {\n      const urlParams = new URLSearchParams(window.location.search);\n      const locationKey = urlParams.get('locationKey');\n      getLocationName(locationKey);\n      getWeekForecast(locationKey);\n      getCurrentConditions(locationKey);\n      setTimeout(() => setLoad(false), 2500);\n    }\n  }, []);\n  let componentRender1;\n\n  if (load === true) {\n    componentRender1 = /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 24\n      }\n    });\n  } else {\n    componentRender1 = /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      className: \"main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CurrentWeather, {\n      locationName: locationName,\n      currentConditions: currentConditions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ForecastDetails, {\n      forecast: forecast,\n      todaysHighlights: currentConditions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"footer\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, \"Weather Application made with React and AccuWeather API.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Code available on \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/alanusse/react-weather-app\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 32\n      }\n    }, \"GitHub\"))));\n  }\n\n  let componentRender;\n\n  if (load === true) {\n    componentRender = /*#__PURE__*/React.createElement(BounceLoader, {\n      size: 80,\n      color: '#d2d2d2',\n      css: override,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }\n    });\n  } else {\n    componentRender = /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      className: \"main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CurrentWeather, {\n      locationName: locationName,\n      currentConditions: currentConditions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ForecastDetails, {\n      forecast: forecast,\n      todaysHighlights: currentConditions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"footer\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Weather Application made with React and AccuWeather API.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, \"Code available on \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/alanusse/react-weather-app\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 32\n      }\n    }, \"GitHub\"))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, componentRender1), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, componentRender);\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/giojo/OneDrive/√Årea de Trabalho/Development/Herolo_Assign/react-weather-app-master/src/App.js"],"names":["React","useState","useEffect","CurrentWeather","ForecastDetails","apiUtils","css","BounceLoader","useSelector","BrowserRouter","Router","Route","Switch","ThemeProvider","GlobalStyle","Theme","PageNotFound","override","App","load","setLoad","locationName","setLocationName","forecast","setForecast","currentConditions","setCurrentConditions","getLocationName","locationKey","fetch","accuWeather","apiKey","then","response","json","result","country","Country","LocalizedName","city","getWeekForecast","DailyForecasts","getCurrentConditions","urlParams","URLSearchParams","window","location","search","length","ipfind","latitude","longitude","res","Key","has","get","setTimeout","componentRender1","componentRender"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAO,kBAAP;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD,C,CACA;;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAkB,eAAlB,C,CACA;AACA;;AACA,OAAOC,YAAP,MAAyB,sBAAzB,C,CAEA;;AAEA,MAAMC,QAAQ,GAAGX,GAAI;;;CAArB;;AAKA,SAASY,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,EAAhD;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,EAAxC;AACA,QAAM,CAACwB,iBAAD,EAAoBC,oBAApB,IAA4CzB,QAAQ,EAA1D;;AAEA,QAAM0B,eAAe,GAAIC,WAAD,IAAiB;AACvCC,IAAAA,KAAK,CAAE,oDAAmDD,WAAY,WAAUvB,QAAQ,CAACyB,WAAT,CAAqBC,MAAO,EAAvG,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAIb,eAAe,CAAC;AAAEc,MAAAA,OAAO,EAAED,MAAM,CAACE,OAAP,CAAeC,aAA1B;AAAyCC,MAAAA,IAAI,EAAEJ,MAAM,CAACG;AAAtD,KAAD,CAFjC;AAGD,GAJD;;AAMA,QAAME,eAAe,GAAIZ,WAAD,IAAiB;AACvCC,IAAAA,KAAK,CAAE,+DAA8DD,WAAY,WAAUvB,QAAQ,CAACyB,WAAT,CAAqBC,MAAO,cAAlH,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACdX,MAAAA,WAAW,CAACW,MAAM,CAACM,cAAR,CAAX;AACD,KAJH;AAKD,GAND;;AAQA,QAAMC,oBAAoB,GAAId,WAAD,IAAiB;AAC5CC,IAAAA,KAAK,CAAE,4DAA2DD,WAAY,WAAUvB,QAAQ,CAACyB,WAAT,CAAqBC,MAAO,eAA/G,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACdT,MAAAA,oBAAoB,CAACS,MAAM,CAAC,CAAD,CAAP,CAApB;AACD,KAJH;AAKD,GAND;;AAQAjC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;;AACA,QAAGF,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBC,MAAvB,KAAkC,CAArC,EAAuC;AACrCnB,MAAAA,KAAK,CAAC,+BAA+BxB,QAAQ,CAAC4C,MAAT,CAAgBlB,MAAhD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACdN,QAAAA,KAAK,CAAC,uFAAuFxB,QAAQ,CAACyB,WAAT,CAAqBC,MAA5G,GAAqH,KAArH,GAA6HI,MAAM,CAACe,QAApI,GAA+I,GAA/I,GAAqJf,MAAM,CAACgB,SAA7J,CAAL,CACGnB,IADH,CACQoB,GAAG,IAAIA,GAAG,CAAClB,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZW,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAA0B,gBAAeb,IAAI,CAACmB,GAAI,EAAlD;AACD,SAJH;AAKD,OARH;AASD,KAVD,MAUO,IAAGV,SAAS,CAACW,GAAV,CAAc,aAAd,CAAH,EAAiC;AACtC,YAAMX,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;AACA,YAAMnB,WAAW,GAAGe,SAAS,CAACY,GAAV,CAAc,aAAd,CAApB;AACA5B,MAAAA,eAAe,CAACC,WAAD,CAAf;AACAY,MAAAA,eAAe,CAACZ,WAAD,CAAf;AACAc,MAAAA,oBAAoB,CAACd,WAAD,CAApB;AACA4B,MAAAA,UAAU,CAAC,MAAMpC,OAAO,CAAC,KAAD,CAAd,EAAuB,IAAvB,CAAV;AACD;AACF,GApBQ,EAoBN,EApBM,CAAT;AAsBA,MAAIqC,gBAAJ;;AACA,MAAGtC,IAAI,KAAK,IAAZ,EAAkB;AAChBsC,IAAAA,gBAAgB,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB;AACD,GAFD,MAEO;AACLA,IAAAA,gBAAgB,gBAChB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAgB,MAAA,YAAY,EAAGpC,YAA/B;AAA8C,MAAA,iBAAiB,EAAGI,iBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,eAAD;AAAiB,MAAA,QAAQ,EAAGF,QAA5B;AAAuC,MAAA,gBAAgB,EAAGE,iBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAqB;AAAG,MAAA,IAAI,EAAC,+CAAR;AAAwD,MAAA,MAAM,EAAC,QAA/D;AAAwE,MAAA,GAAG,EAAC,qBAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAArB,CAFF,CALJ,CADA;AAWD;;AAED,MAAIiC,eAAJ;;AACA,MAAGvC,IAAI,KAAK,IAAZ,EAAkB;AAChBuC,IAAAA,eAAe,gBAAG,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAG,EAArB;AAA0B,MAAA,KAAK,EAAG,SAAlC;AAA8C,MAAA,GAAG,EAAGzC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB;AACD,GAFD,MAEO;AACLyC,IAAAA,eAAe,gBACf,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAgB,MAAA,YAAY,EAAGrC,YAA/B;AAA8C,MAAA,iBAAiB,EAAGI,iBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,eAAD;AAAiB,MAAA,QAAQ,EAAGF,QAA5B;AAAuC,MAAA,gBAAgB,EAAGE,iBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAqB;AAAG,MAAA,IAAI,EAAC,+CAAR;AAAwD,MAAA,MAAM,EAAC,QAA/D;AAAwE,MAAA,GAAG,EAAC,qBAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAArB,CAFF,CALJ,CADA;AAWD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEgC,gBADF,gBAGA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,eADJ,CAJF;AAQD;;AAED,eAAexC,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CurrentWeather from './components/CurrentWeather/CurrentWeather';\nimport ForecastDetails from './components/ForecastDetails/ForecastDetails';\nimport apiUtils from './api/apiUtils';\nimport { css } from '@emotion/core';\nimport BounceLoader from 'react-spinners/BounceLoader';\nimport './styles/App.css';\n\nimport { useSelector } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n//import { Container, Row, Col } from 'react-bootstrap'\nimport { ThemeProvider } from 'styled-components'\n\nimport GlobalStyle from './theme/GlobalStyle'\nimport Theme from './theme/theme'\n//import HomePage from './pages/HomePage'\n//import FavoritesPage from './pages/FavoritesPage'\nimport PageNotFound from './pages/PageNotFound'\n\n// import Header from './components/Header';\n\nconst override = css`\n  display: block;\n  margin: auto;\n`;\n\nfunction App() {\n  const [load, setLoad] = useState(true);\n  const [locationName, setLocationName] = useState();\n  const [forecast, setForecast] = useState();\n  const [currentConditions, setCurrentConditions] = useState();\n\n  const getLocationName = (locationKey) =>¬†{\n    fetch(`https://dataservice.accuweather.com/locations/v1/${locationKey}?apikey=${apiUtils.accuWeather.apiKey}`)\n      .then(response => response.json())\n      .then(result => setLocationName({ country: result.Country.LocalizedName, city: result.LocalizedName }));\n  };\n\n  const getWeekForecast = (locationKey) => {\n    fetch(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${apiUtils.accuWeather.apiKey}&metric=true`)\n      .then(response => response.json())\n      .then(result => {\n        setForecast(result.DailyForecasts);\n      })\n  };\n\n  const getCurrentConditions = (locationKey) => {\n    fetch(`https://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=${apiUtils.accuWeather.apiKey}&details=true`)\n      .then(response => response.json())\n      .then(result => {\n        setCurrentConditions(result[0]);\n      })\n  };\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    if(window.location.search.length === 0){\n      fetch('https://ipfind.co/me?auth=' + apiUtils.ipfind.apiKey)\n        .then(response => response.json())\n        .then(result => {\n          fetch('https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=' + apiUtils.accuWeather.apiKey + '&q=' + result.latitude + ',' + result.longitude)\n            .then(res => res.json())\n            .then(json => {\n              window.location.search = `?locationKey=${json.Key}`;\n            })\n        })\n    } else if(urlParams.has('locationKey')) {\n      const urlParams = new URLSearchParams(window.location.search);\n      const locationKey = urlParams.get('locationKey');\n      getLocationName(locationKey);\n      getWeekForecast(locationKey);\n      getCurrentConditions(locationKey);\n      setTimeout(() => setLoad(false), 2500);\n    }\n  }, []);\n\n  let componentRender1;\n  if(load === true) {\n    componentRender1 = <h1></h1>;\n  } else {\n    componentRender1 =\n    <React.Fragment>\n        <main className='main-content'>\n          <CurrentWeather locationName={ locationName } currentConditions={ currentConditions } />\n          <ForecastDetails forecast={ forecast } todaysHighlights={ currentConditions } />\n        </main>\n        <footer>\n          <p className=''>Weather Application made with React and AccuWeather API.</p>\n          <p>Code available on <a href='https://github.com/alanusse/react-weather-app' target='_blank' rel='noopener noreferrer'>GitHub</a></p>\n        </footer>\n    </React.Fragment>;\n  }\n\n  let componentRender;\n  if(load === true) {\n    componentRender = <BounceLoader size={ 80 } color={ '#d2d2d2' } css={ override } />;\n  } else {\n    componentRender =\n    <React.Fragment>\n        <main className='main-content'>\n          <CurrentWeather locationName={ locationName } currentConditions={ currentConditions } />\n          <ForecastDetails forecast={ forecast } todaysHighlights={ currentConditions } />\n        </main>\n        <footer>\n          <p className=''>Weather Application made with React and AccuWeather API.</p>\n          <p>Code available on <a href='https://github.com/alanusse/react-weather-app' target='_blank' rel='noopener noreferrer'>GitHub</a></p>\n        </footer>\n    </React.Fragment>;\n  }\n\n  return (\n    <div className=\"App\">\n    { componentRender1 }\n  </div>,\n    <div className=\"App\">\n      { componentRender }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giojo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Development\\\\Herolo_Assign\\\\react-weather-app-herolo\\\\src\\\\components\\\\SearchLocation\\\\SearchLocation.js\";\nimport React, { useState } from 'react';\nimport './SearchLocation.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faCompass } from '@fortawesome/free-solid-svg-icons';\nimport apiUtils from '../../api/apiUtils';\n\nfunction SearchLocation() {\n  const [places, setPlaces] = useState([]);\n  const [input, setInput] = useState({\n    locationName: '',\n    locationKey: ''\n  });\n\n  const hideAutocompleteList = () => {\n    return document.querySelector('.autocomplete-list').style.display = 'none';\n  };\n\n  const showAutocompleteList = event => {\n    let inputValue = event.target.value;\n\n    if (inputValue.length > 0) {\n      return document.querySelector('.autocomplete-list').style.display = 'block';\n    }\n  };\n\n  const searchLocation = async event => {\n    let inputValue = event.target.value;\n    let autoCompleteList = document.querySelector('.autocomplete-list');\n    setInput({\n      locationName: inputValue\n    });\n\n    if (inputValue.length <= 1) {\n      return autoCompleteList.style.display = 'none';\n    } else if (inputValue.length > 0) {\n      await fetch(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${apiUtils.accuWeather.apiKey}&q=${inputValue}`).then(response => response.json()).then(data => setPlaces(data));\n      autoCompleteList.style.display = 'block';\n    }\n  };\n\n  const selectLocation = props => {\n    const urlParams = new URLSearchParams(window.location.search);\n    urlParams.set('locationKey', props.locationKey);\n    window.location.search = urlParams;\n    setInput({\n      locationName: `${props.city}, ${props.country}`,\n      locationKey: props.locationKey\n    });\n  };\n\n  function Item(props) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete-item\",\n      onMouseDown: () => selectLocation(props),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, `${props.city}, ${props.country}`);\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"search-form\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-input\",\n    placeholder: \"Search for places...\",\n    onBlur: hideAutocompleteList,\n    onChange: searchLocation,\n    onFocus: showAutocompleteList,\n    value: input.locationName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCompass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"autocomplete-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, places.length > 0 ? places.map((place, idx) => {\n    return /*#__PURE__*/React.createElement(Item, {\n      key: idx,\n      city: place.LocalizedName,\n      country: place.Country.LocalizedName,\n      locationKey: place.Key,\n      t: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 32\n      }\n    });\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"autocomplete-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 26\n    }\n  }, \"Places not found.\"))));\n}\n\nexport default SearchLocation;","map":{"version":3,"sources":["C:/Users/giojo/OneDrive/Área de Trabalho/Development/Herolo_Assign/react-weather-app-herolo/src/components/SearchLocation/SearchLocation.js"],"names":["React","useState","FontAwesomeIcon","faSearch","faCompass","apiUtils","SearchLocation","places","setPlaces","input","setInput","locationName","locationKey","hideAutocompleteList","document","querySelector","style","display","showAutocompleteList","event","inputValue","target","value","length","searchLocation","autoCompleteList","fetch","accuWeather","apiKey","then","response","json","data","selectLocation","props","urlParams","URLSearchParams","window","location","search","set","city","country","Item","map","place","idx","LocalizedName","Country","Key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './SearchLocation.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faCompass } from '@fortawesome/free-solid-svg-icons';\nimport apiUtils from '../../api/apiUtils';\n\nfunction SearchLocation() {\n    const [places, setPlaces] = useState([]);\n    const [input, setInput] = useState({ locationName: '', locationKey: ''});\n\n    const hideAutocompleteList = () => {\n        return document.querySelector('.autocomplete-list').style.display = 'none';\n    };\n\n    const showAutocompleteList = event => {\n        let inputValue = event.target.value;\n        if(inputValue.length > 0) {\n            return document.querySelector('.autocomplete-list').style.display = 'block';\n        }\n    };\n\n    const searchLocation = async event => {\n        let inputValue = event.target.value;\n        let autoCompleteList = document.querySelector('.autocomplete-list');\n\n        setInput({ locationName: inputValue });\n\n        if(inputValue.length <= 1) {\n            return autoCompleteList.style.display = 'none';\n        } else if(inputValue.length > 0){\n            await fetch(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${ apiUtils.accuWeather.apiKey }&q=${ inputValue }`)\n            .then(response => response.json())\n            .then(data => setPlaces(data));\n\n            autoCompleteList.style.display = 'block';\n        }\n    };\n\n    const selectLocation = (props) => {\n        const urlParams = new URLSearchParams(window.location.search);\n        urlParams.set('locationKey', props.locationKey);\n        window.location.search = urlParams;\n\n        setInput({ locationName: `${props.city}, ${props.country}`, locationKey: props.locationKey});\n    };\n\n    function Item(props) {\n        return (\n            <div className='autocomplete-item' onMouseDown={ () => selectLocation(props) }>{`${ props.city }, ${ props.country }`}</div>\n        );\n    };\n\n    return (\n        <form className='search-form' autoComplete='off'>\n            <div className='search-container'>\n                <span className='input-icon-container'>\n                    <FontAwesomeIcon icon={ faSearch }></FontAwesomeIcon>\n                    <input type='text' className='search-input' placeholder='Search for places...' onBlur={ hideAutocompleteList } \n                    onChange={ searchLocation } onFocus={ showAutocompleteList } value={ input.locationName }></input>\n                </span>\n                <FontAwesomeIcon icon={ faCompass }></FontAwesomeIcon>\n                <div className='autocomplete-list'>\n                    { places.length > 0 ?\n                    places.map((place, idx) => {\n                        return <Item key={ idx } city={ place.LocalizedName } country={ place.Country.LocalizedName } locationKey={ place.Key } t />\n                    }) : <div className='autocomplete-item'>Places not found.</div> }\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default SearchLocation;"]},"metadata":{},"sourceType":"module"}
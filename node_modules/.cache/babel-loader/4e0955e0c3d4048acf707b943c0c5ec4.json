{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\giojo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Development\\\\Herolo_Assign\\\\react-weather-app-herolo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';var useGeolocation=function useGeolocation(){var _useState=useState({loaded:false,coords:{latitude:'',longitude:''}}),_useState2=_slicedToArray(_useState,2),currentPosition=_useState2[0],setCurrentPosition=_useState2[1];var onSuccess=function onSuccess(location){setCurrentPosition({loaded:true,coords:{latitude:location.coords.latitude,longitude:location.coords.longitude}});};var onError=function onError(error){setCurrentPosition({loaded:true,error:error});};useEffect(function(){if(!('geolocation'in navigator)){onError({code:0,message:'Geolocation not supported'});}navigator.geolocation.getCurrentPosition(onSuccess,onError);},[]);return currentPosition;};export default useGeolocation;","map":{"version":3,"sources":["C:/Users/giojo/OneDrive/Área de Trabalho/Development/Herolo_Assign/react-weather-app-herolo/src/components/hooks/useGeolocation.js"],"names":["useState","useEffect","useGeolocation","loaded","coords","latitude","longitude","currentPosition","setCurrentPosition","onSuccess","location","onError","error","navigator","code","message","geolocation","getCurrentPosition"],"mappings":"iOAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,eACmBF,QAAQ,CAAC,CACrDG,MAAM,CAAE,KAD6C,CAErDC,MAAM,CAAE,CAAEC,QAAQ,CAAE,EAAZ,CAAgBC,SAAS,CAAE,EAA3B,CAF6C,CAAD,CAD3B,wCACpBC,eADoB,eACHC,kBADG,eAM3B,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,QAAD,CAAc,CAC9BF,kBAAkB,CAAC,CACjBL,MAAM,CAAE,IADS,CAEjBC,MAAM,CAAE,CACNC,QAAQ,CAAEK,QAAQ,CAACN,MAAT,CAAgBC,QADpB,CAENC,SAAS,CAAEI,QAAQ,CAACN,MAAT,CAAgBE,SAFrB,CAFS,CAAD,CAAlB,CAOD,CARD,CAUA,GAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACzBJ,kBAAkB,CAAC,CACjBL,MAAM,CAAE,IADS,CAEjBS,KAAK,CAALA,KAFiB,CAAD,CAAlB,CAID,CALD,CAOAX,SAAS,CAAC,UAAM,CACd,GAAI,EAAE,eAAiBY,CAAAA,SAAnB,CAAJ,CAAmC,CACjCF,OAAO,CAAC,CACNG,IAAI,CAAE,CADA,CAENC,OAAO,CAAE,2BAFH,CAAD,CAAP,CAID,CACDF,SAAS,CAACG,WAAV,CAAsBC,kBAAtB,CAAyCR,SAAzC,CAAoDE,OAApD,EACD,CARQ,CAQN,EARM,CAAT,CAUA,MAAOJ,CAAAA,eAAP,CACD,CAlCD,CAoCA,cAAeL,CAAAA,cAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst useGeolocation = () => {\n  const [currentPosition, setCurrentPosition] = useState({\n    loaded: false,\n    coords: { latitude: '', longitude: '' },\n  })\n\n  const onSuccess = (location) => {\n    setCurrentPosition({\n      loaded: true,\n      coords: {\n        latitude: location.coords.latitude,\n        longitude: location.coords.longitude,\n      },\n    })\n  }\n\n  const onError = (error) => {\n    setCurrentPosition({\n      loaded: true,\n      error,\n    })\n  }\n\n  useEffect(() => {\n    if (!('geolocation' in navigator)) {\n      onError({\n        code: 0,\n        message: 'Geolocation not supported',\n      })\n    }\n    navigator.geolocation.getCurrentPosition(onSuccess, onError)\n  }, [])\n\n  return currentPosition\n}\n\nexport default useGeolocation\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giojo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Development\\\\Herolo_Assign\\\\react-weather-app-master\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport CurrentWeather from './components/CurrentWeather/CurrentWeather';\nimport ForecastDetails from './components/ForecastDetails/ForecastDetails';\nimport apiUtils from './api/apiUtils';\nimport { css } from '@emotion/core';\nimport BounceLoader from 'react-spinners/BounceLoader';\nimport './styles/App.css';\nimport { useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; //import { Container, Row, Col } from 'react-bootstrap'\n\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './theme/GlobalStyle';\nimport Theme from './theme/theme'; //import HomePage from './pages/HomePage'\n//import FavoritesPage from './pages/FavoritesPage'\n\nimport PageNotFound from './pages/PageNotFound'; //import Header from './components/Header';\n\nconst override = css`\n  display: block;\n  margin: auto;\n`;\n\nfunction App() {\n  /*\n  const [load, setLoad] = useState(true);\n  const [locationName, setLocationName] = useState();\n  const [forecast, setForecast] = useState();\n  const [currentConditions, setCurrentConditions] = useState();\n   const getLocationName = (locationKey) => {\n    fetch(`https://dataservice.accuweather.com/locations/v1/${locationKey}?apikey=${apiUtils.accuWeather.apiKey}`)\n      .then(response => response.json())\n      .then(result => setLocationName({ country: result.Country.LocalizedName, city: result.LocalizedName }));\n  };\n   const getWeekForecast = (locationKey) => {\n    fetch(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${apiUtils.accuWeather.apiKey}&metric=true`)\n      .then(response => response.json())\n      .then(result => {\n        setForecast(result.DailyForecasts);\n      })\n  };\n   const getCurrentConditions = (locationKey) => {\n    fetch(`https://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=${apiUtils.accuWeather.apiKey}&details=true`)\n      .then(response => response.json())\n      .then(result => {\n        setCurrentConditions(result[0]);\n      })\n  };\n   useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    if(window.location.search.length === 0){\n      fetch('https://ipfind.co/me?auth=' + apiUtils.ipfind.apiKey)\n        .then(response => response.json())\n        .then(result => {\n          fetch('https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=' + apiUtils.accuWeather.apiKey + '&q=' + result.latitude + ',' + result.longitude)\n            .then(res => res.json())\n            .then(json => {\n              window.location.search = `?locationKey=${json.Key}`;\n            })\n        })\n    } else if(urlParams.has('locationKey')) {\n      const urlParams = new URLSearchParams(window.location.search);\n      const locationKey = urlParams.get('locationKey');\n      getLocationName(locationKey);\n      getWeekForecast(locationKey);\n      getCurrentConditions(locationKey);\n      setTimeout(() => setLoad(false), 2500);\n    }\n  }, []);\n    let componentRender;\n  if(load === true) {\n    componentRender = <BounceLoader size={ 80 } color={ '#d2d2d2' } css={ override } />;\n  } else {\n    componentRender =\n    <React.Fragment>\n        <main className='main-content'>\n          <CurrentWeather locationName={ locationName } currentConditions={ currentConditions } />\n          <ForecastDetails forecast={ forecast } todaysHighlights={ currentConditions } />\n        </main>\n        <footer>\n          <p className=''>Weather Application made with React and AccuWeather API.</p>\n          <p>Code available on <a href='https://github.com/alanusse/react-weather-app' target='_blank' rel='noopener noreferrer'>GitHub</a></p>\n        </footer>\n    </React.Fragment>;\n  }\n  */\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, componentRender), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, componentRender);\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/giojo/OneDrive/Área de Trabalho/Development/Herolo_Assign/react-weather-app-master/src/App.js"],"names":["React","useState","useEffect","CurrentWeather","ForecastDetails","apiUtils","css","BounceLoader","useSelector","BrowserRouter","Router","Route","Switch","ThemeProvider","GlobalStyle","Theme","PageNotFound","override","App","componentRender"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAO,kBAAP;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD,C,CACA;;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAkB,eAAlB,C,CACA;AACA;;AACA,OAAOC,YAAP,MAAyB,sBAAzB,C,CAEA;;AAEA,MAAMC,QAAQ,GAAGX,GAAI;;;CAArB;;AAKA,SAASY,GAAT,GAAe;AACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,eADF,gBAGA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,eADJ,CAJF;AAQD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CurrentWeather from './components/CurrentWeather/CurrentWeather';\nimport ForecastDetails from './components/ForecastDetails/ForecastDetails';\nimport apiUtils from './api/apiUtils';\nimport { css } from '@emotion/core';\nimport BounceLoader from 'react-spinners/BounceLoader';\nimport './styles/App.css';\n\nimport { useSelector } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n//import { Container, Row, Col } from 'react-bootstrap'\nimport { ThemeProvider } from 'styled-components'\n\nimport GlobalStyle from './theme/GlobalStyle'\nimport Theme from './theme/theme'\n//import HomePage from './pages/HomePage'\n//import FavoritesPage from './pages/FavoritesPage'\nimport PageNotFound from './pages/PageNotFound'\n\n//import Header from './components/Header';\n\nconst override = css`\n  display: block;\n  margin: auto;\n`;\n\nfunction App() {\n  /*\n  const [load, setLoad] = useState(true);\n  const [locationName, setLocationName] = useState();\n  const [forecast, setForecast] = useState();\n  const [currentConditions, setCurrentConditions] = useState();\n\n  const getLocationName = (locationKey) => {\n    fetch(`https://dataservice.accuweather.com/locations/v1/${locationKey}?apikey=${apiUtils.accuWeather.apiKey}`)\n      .then(response => response.json())\n      .then(result => setLocationName({ country: result.Country.LocalizedName, city: result.LocalizedName }));\n  };\n\n  const getWeekForecast = (locationKey) => {\n    fetch(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${apiUtils.accuWeather.apiKey}&metric=true`)\n      .then(response => response.json())\n      .then(result => {\n        setForecast(result.DailyForecasts);\n      })\n  };\n\n  const getCurrentConditions = (locationKey) => {\n    fetch(`https://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=${apiUtils.accuWeather.apiKey}&details=true`)\n      .then(response => response.json())\n      .then(result => {\n        setCurrentConditions(result[0]);\n      })\n  };\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    if(window.location.search.length === 0){\n      fetch('https://ipfind.co/me?auth=' + apiUtils.ipfind.apiKey)\n        .then(response => response.json())\n        .then(result => {\n          fetch('https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=' + apiUtils.accuWeather.apiKey + '&q=' + result.latitude + ',' + result.longitude)\n            .then(res => res.json())\n            .then(json => {\n              window.location.search = `?locationKey=${json.Key}`;\n            })\n        })\n    } else if(urlParams.has('locationKey')) {\n      const urlParams = new URLSearchParams(window.location.search);\n      const locationKey = urlParams.get('locationKey');\n      getLocationName(locationKey);\n      getWeekForecast(locationKey);\n      getCurrentConditions(locationKey);\n      setTimeout(() => setLoad(false), 2500);\n    }\n  }, []);\n\n\n  let componentRender;\n  if(load === true) {\n    componentRender = <BounceLoader size={ 80 } color={ '#d2d2d2' } css={ override } />;\n  } else {\n    componentRender =\n    <React.Fragment>\n        <main className='main-content'>\n          <CurrentWeather locationName={ locationName } currentConditions={ currentConditions } />\n          <ForecastDetails forecast={ forecast } todaysHighlights={ currentConditions } />\n        </main>\n        <footer>\n          <p className=''>Weather Application made with React and AccuWeather API.</p>\n          <p>Code available on <a href='https://github.com/alanusse/react-weather-app' target='_blank' rel='noopener noreferrer'>GitHub</a></p>\n        </footer>\n    </React.Fragment>;\n  }\n*/\n  return (\n    <div className=\"App\">\n    { componentRender}\n  </div>,\n    <div className=\"App\">\n      { componentRender }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
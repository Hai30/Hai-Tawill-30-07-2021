{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\giojo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Development\\\\Herolo_Assign\\\\react-weather-app-herolo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{memo,useState}from'react';import Lottie from'react-lottie-player';import parseUnit from'parse-unit';import{useDispatch}from'react-redux';import animationData from'./animationData.json';import{darkModeToggle}from'../redux/theme/themeActions';import{NightModeButton,NightModeDiv}from'./styles/components.styles';var NightModeToggle=function NightModeToggle(_ref){var size=_ref.size,checked=_ref.checked,onChange=_ref.onChange,speed=_ref.speed,className=_ref.className;var _parseUnit=parseUnit(size),_parseUnit2=_slicedToArray(_parseUnit,2),sizeValue=_parseUnit2[0],sizeUnit=_parseUnit2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isReadyToAnimate=_useState2[0],setReadyToAnimate=_useState2[1];var segmentsToPlay=checked?[2,50]:[51,96];var segmentToGoTo=checked?51:2;var dispatch=useDispatch();var onClickHandler=function onClickHandler(){setReadyToAnimate(true);onChange(!checked);dispatch(darkModeToggle());};return/*#__PURE__*/React.createElement(NightModeButton,{onClick:onClickHandler,\"aria-hidden\":\"true\",className:className,sizeValue:sizeValue,sizeUnit:sizeUnit},/*#__PURE__*/React.createElement(NightModeDiv,{sizeValue:sizeValue,sizeUnit:sizeUnit},/*#__PURE__*/React.createElement(Lottie,{key:\"$preventGlitches\",play:isReadyToAnimate,speed:speed,animationData:animationData,loop:false,segments:segmentsToPlay,goTo:segmentToGoTo})));};NightModeToggle.defaultProps={size:85,checked:false,onChange:function onChange(nextValue){return null;},speed:1.3,className:null};var propsAreEqual=function propsAreEqual(prevProps,nextProps){return prevProps.size===nextProps.size&&prevProps.checked===nextProps.checked&&prevProps.speed===nextProps.speed&&prevProps.className===nextProps.className;};export default memo(NightModeToggle,propsAreEqual);","map":{"version":3,"sources":["C:/Users/giojo/OneDrive/Área de Trabalho/Development/Herolo_Assign/react-weather-app-herolo/src/components/NightModeToggle.js"],"names":["React","memo","useState","Lottie","parseUnit","useDispatch","animationData","darkModeToggle","NightModeButton","NightModeDiv","NightModeToggle","size","checked","onChange","speed","className","sizeValue","sizeUnit","isReadyToAnimate","setReadyToAnimate","segmentsToPlay","segmentToGoTo","dispatch","onClickHandler","defaultProps","nextValue","propsAreEqual","prevProps","nextProps"],"mappings":"iOAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,CAAsBC,QAAtB,KAAsC,OAAtC,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CAEA,OAASC,WAAT,KAA4B,aAA5B,CAEA,MAAOC,CAAAA,aAAP,KAA0B,sBAA1B,CACA,OAASC,cAAT,KAA+B,6BAA/B,CACA,OAASC,eAAT,CAA0BC,YAA1B,KAA8C,4BAA9C,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAmD,IAAhDC,CAAAA,IAAgD,MAAhDA,IAAgD,CAA1CC,OAA0C,MAA1CA,OAA0C,CAAjCC,QAAiC,MAAjCA,QAAiC,CAAvBC,KAAuB,MAAvBA,KAAuB,CAAhBC,SAAgB,MAAhBA,SAAgB,gBAC3CX,SAAS,CAACO,IAAD,CADkC,0CAClEK,SADkE,gBACvDC,QADuD,8BAE3Bf,QAAQ,CAAC,KAAD,CAFmB,wCAElEgB,gBAFkE,eAEhDC,iBAFgD,eAIzE,GAAMC,CAAAA,cAAc,CAAGR,OAAO,CAAG,CAAC,CAAD,CAAI,EAAJ,CAAH,CAAa,CAAC,EAAD,CAAK,EAAL,CAA3C,CACA,GAAMS,CAAAA,aAAa,CAAGT,OAAO,CAAG,EAAH,CAAQ,CAArC,CAEA,GAAMU,CAAAA,QAAQ,CAAGjB,WAAW,EAA5B,CAEA,GAAMkB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BJ,iBAAiB,CAAC,IAAD,CAAjB,CACAN,QAAQ,CAAC,CAACD,OAAF,CAAR,CACAU,QAAQ,CAACf,cAAc,EAAf,CAAR,CACD,CAJD,CAMA,mBACE,oBAAC,eAAD,EACE,OAAO,CAAEgB,cADX,CAEE,cAAY,MAFd,CAGE,SAAS,CAAER,SAHb,CAIE,SAAS,CAAEC,SAJb,CAKE,QAAQ,CAAEC,QALZ,eAOE,oBAAC,YAAD,EAAc,SAAS,CAAED,SAAzB,CAAoC,QAAQ,CAAEC,QAA9C,eACE,oBAAC,MAAD,EACE,GAAG,CAAC,kBADN,CAEE,IAAI,CAAEC,gBAFR,CAGE,KAAK,CAAEJ,KAHT,CAIE,aAAa,CAAER,aAJjB,CAKE,IAAI,CAAE,KALR,CAME,QAAQ,CAAEc,cANZ,CAOE,IAAI,CAAEC,aAPR,EADF,CAPF,CADF,CAqBD,CApCD,CA8CAX,eAAe,CAACc,YAAhB,CAA+B,CAC7Bb,IAAI,CAAE,EADuB,CAE7BC,OAAO,CAAE,KAFoB,CAG7BC,QAAQ,CAAE,kBAACY,SAAD,QAAe,KAAf,EAHmB,CAI7BX,KAAK,CAAE,GAJsB,CAK7BC,SAAS,CAAE,IALkB,CAA/B,CAQA,GAAMW,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,SAAD,CAAYC,SAAZ,QACpBD,CAAAA,SAAS,CAAChB,IAAV,GAAmBiB,SAAS,CAACjB,IAA7B,EACAgB,SAAS,CAACf,OAAV,GAAsBgB,SAAS,CAAChB,OADhC,EAEAe,SAAS,CAACb,KAAV,GAAoBc,SAAS,CAACd,KAF9B,EAGAa,SAAS,CAACZ,SAAV,GAAwBa,SAAS,CAACb,SAJd,EAAtB,CAMA,cAAed,CAAAA,IAAI,CAACS,eAAD,CAAkBgB,aAAlB,CAAnB","sourcesContent":["import React, { memo, useState } from 'react'\nimport Lottie from 'react-lottie-player'\nimport parseUnit from 'parse-unit'\nimport PropTypes from 'prop-types'\nimport { useDispatch } from 'react-redux'\n\nimport animationData from './animationData.json'\nimport { darkModeToggle } from '../redux/theme/themeActions'\nimport { NightModeButton, NightModeDiv } from './styles/components.styles'\n\nconst NightModeToggle = ({ size, checked, onChange, speed, className }) => {\n  const [sizeValue, sizeUnit] = parseUnit(size)\n  const [isReadyToAnimate, setReadyToAnimate] = useState(false)\n\n  const segmentsToPlay = checked ? [2, 50] : [51, 96]\n  const segmentToGoTo = checked ? 51 : 2\n\n  const dispatch = useDispatch()\n\n  const onClickHandler = () => {\n    setReadyToAnimate(true)\n    onChange(!checked)\n    dispatch(darkModeToggle())\n  }\n\n  return (\n    <NightModeButton\n      onClick={onClickHandler}\n      aria-hidden='true'\n      className={className}\n      sizeValue={sizeValue}\n      sizeUnit={sizeUnit}\n    >\n      <NightModeDiv sizeValue={sizeValue} sizeUnit={sizeUnit}>\n        <Lottie\n          key='$preventGlitches'\n          play={isReadyToAnimate}\n          speed={speed}\n          animationData={animationData}\n          loop={false}\n          segments={segmentsToPlay}\n          goTo={segmentToGoTo}\n        />\n      </NightModeDiv>\n    </NightModeButton>\n  )\n}\n\nNightModeToggle.propTypes = {\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n  speed: PropTypes.number,\n  className: PropTypes.string,\n}\n\nNightModeToggle.defaultProps = {\n  size: 85,\n  checked: false,\n  onChange: (nextValue) => null,\n  speed: 1.3,\n  className: null,\n}\n\nconst propsAreEqual = (prevProps, nextProps) =>\n  prevProps.size === nextProps.size &&\n  prevProps.checked === nextProps.checked &&\n  prevProps.speed === nextProps.speed &&\n  prevProps.className === nextProps.className\n\nexport default memo(NightModeToggle, propsAreEqual)\n"]},"metadata":{},"sourceType":"module"}
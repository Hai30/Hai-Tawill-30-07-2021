{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giojo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Development\\\\Herolo_Assign\\\\react-weather-app-master\\\\src\\\\components\\\\FavoriteItem.js\";\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router, useHistory } from 'react-router-dom';\nimport { getWeatherRequest } from '../redux/weather/weatherActions';\nimport { FAVORITE_SHOW_ITEM } from '../redux/favorites/favoritesConstants';\nimport { FavoriteItemCard, Heading3, FavoriteCardText } from './styles/components.styles';\n\nconst FavoriteItem = ({\n  favoriteCityName,\n  cityKey,\n  weather: {\n    WeatherText,\n    WeatherIcon,\n    Temperature: {\n      Metric: {\n        Value\n      }\n    }\n  }\n}) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const roundedTemperature = Math.round(parseFloat(Value));\n  const weatherImage = chooseWeatherImage(WeatherText);\n\n  const onClickHandler = () => {\n    dispatch({\n      type: FAVORITE_SHOW_ITEM,\n      payload: favoriteCityName\n    });\n    dispatch(getWeatherRequest({\n      location: cityKey,\n      cityName: favoriteCityName\n    }));\n    history.push('/');\n  };\n\n  return /*#__PURE__*/React.createElement(FavoriteItemCard, {\n    className: \"img-fluid\",\n    onClick: onClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteItemCard.Img, {\n    src: `/img/weather-images/${weatherImage}.jpg`,\n    alt: \"Weather image\",\n    style: {\n      width: '100%'\n    },\n    loading: \"lazy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FavoriteItemCard.ImgOverlay, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Heading3, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, favoriteCityName.length > 17 ? `${favoriteCityName.slice(0, 15)}...` : favoriteCityName), /*#__PURE__*/React.createElement(\"img\", {\n    src: `/img/weather-icons/${WeatherIcon}-s.png`,\n    alt: \"weather icon\",\n    className: \"column\",\n    loading: \"lazy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FavoriteCardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, roundedTemperature, \" \\xB0\")), ' ');\n};\n\nFavoriteItem.propTypes = {\n  favoriteCityName: PropTypes.string.isRequired,\n  cityKey: PropTypes.string.isRequired,\n  weather: PropTypes.object.isRequired\n};\nexport default FavoriteItem;","map":{"version":3,"sources":["C:/Users/giojo/OneDrive/Área de Trabalho/Development/Herolo_Assign/react-weather-app-master/src/components/FavoriteItem.js"],"names":["useDispatch","PropTypes","BrowserRouter","Router","useHistory","getWeatherRequest","FAVORITE_SHOW_ITEM","FavoriteItemCard","Heading3","FavoriteCardText","FavoriteItem","favoriteCityName","cityKey","weather","WeatherText","WeatherIcon","Temperature","Metric","Value","history","dispatch","roundedTemperature","Math","round","parseFloat","weatherImage","chooseWeatherImage","onClickHandler","type","payload","location","cityName","push","width","length","slice","propTypes","string","isRequired","object"],"mappings":";AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,UAAlC,QAAoD,kBAApD;AAEA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,kBAAT,QAAmC,uCAAnC;AAEA,SACEC,gBADF,EAEEC,QAFF,EAGEC,gBAHF,QAIO,4BAJP;;AAMA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,gBADoB;AAEpBC,EAAAA,OAFoB;AAGpBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WADO;AAEPC,IAAAA,WAFO;AAGPC,IAAAA,WAAW,EAAE;AACXC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADG;AAHN;AAHW,CAAD,KAUf;AACJ,QAAMC,OAAO,GAAGf,UAAU,EAA1B;AAEA,QAAMgB,QAAQ,GAAGpB,WAAW,EAA5B;AAEA,QAAMqB,kBAAkB,GAAGC,IAAI,CAACC,KAAL,CAAWC,UAAU,CAACN,KAAD,CAArB,CAA3B;AAEA,QAAMO,YAAY,GAAGC,kBAAkB,CAACZ,WAAD,CAAvC;;AAEA,QAAMa,cAAc,GAAG,MAAM;AAC3BP,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEtB,kBAAR;AAA4BuB,MAAAA,OAAO,EAAElB;AAArC,KAAD,CAAR;AACAS,IAAAA,QAAQ,CACNf,iBAAiB,CAAC;AAAEyB,MAAAA,QAAQ,EAAElB,OAAZ;AAAqBmB,MAAAA,QAAQ,EAAEpB;AAA/B,KAAD,CADX,CAAR;AAGAQ,IAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD,GAND;;AAQA,sBACE,oBAAC,gBAAD;AAAkB,IAAA,SAAS,EAAC,WAA5B;AAAwC,IAAA,OAAO,EAAEL,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD,CAAkB,GAAlB;AACE,IAAA,GAAG,EAAG,uBAAsBF,YAAa,MAD3C;AAEE,IAAA,GAAG,EAAC,eAFN;AAGE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAHT;AAIE,IAAA,OAAO,EAAC,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,gBAAD,CAAkB,UAAlB;AAA6B,IAAA,SAAS,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,gBAAgB,CAACuB,MAAjB,GAA0B,EAA1B,GACI,GAAEvB,gBAAgB,CAACwB,KAAjB,CAAuB,CAAvB,EAA0B,EAA1B,CAA8B,KADpC,GAEGxB,gBAHN,CADF,eAME;AACE,IAAA,GAAG,EAAG,sBAAqBI,WAAY,QADzC;AAEE,IAAA,GAAG,EAAC,cAFN;AAGE,IAAA,SAAS,EAAC,QAHZ;AAIE,IAAA,OAAO,EAAC,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAYE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBM,kBAAnB,UAZF,CAPF,EAoBiC,GApBjC,CADF;AAwBD,CAnDD;;AAqDAX,YAAY,CAAC0B,SAAb,GAAyB;AACvBzB,EAAAA,gBAAgB,EAAEV,SAAS,CAACoC,MAAV,CAAiBC,UADZ;AAEvB1B,EAAAA,OAAO,EAAEX,SAAS,CAACoC,MAAV,CAAiBC,UAFH;AAGvBzB,EAAAA,OAAO,EAAEZ,SAAS,CAACsC,MAAV,CAAiBD;AAHH,CAAzB;AAMA,eAAe5B,YAAf","sourcesContent":["import { useDispatch } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { BrowserRouter as Router, useHistory } from 'react-router-dom'\n\nimport { getWeatherRequest } from '../redux/weather/weatherActions'\nimport { FAVORITE_SHOW_ITEM } from '../redux/favorites/favoritesConstants'\n\nimport {\n  FavoriteItemCard,\n  Heading3,\n  FavoriteCardText,\n} from './styles/components.styles'\n\nconst FavoriteItem = ({\n  favoriteCityName,\n  cityKey,\n  weather: {\n    WeatherText,\n    WeatherIcon,\n    Temperature: {\n      Metric: { Value },\n    },\n  },\n}) => {\n  const history = useHistory()\n\n  const dispatch = useDispatch()\n\n  const roundedTemperature = Math.round(parseFloat(Value))\n\n  const weatherImage = chooseWeatherImage(WeatherText)\n\n  const onClickHandler = () => {\n    dispatch({ type: FAVORITE_SHOW_ITEM, payload: favoriteCityName })\n    dispatch(\n      getWeatherRequest({ location: cityKey, cityName: favoriteCityName })\n    )\n    history.push('/')\n  }\n\n  return (\n    <FavoriteItemCard className='img-fluid' onClick={onClickHandler}>\n      <FavoriteItemCard.Img\n        src={`/img/weather-images/${weatherImage}.jpg`}\n        alt='Weather image'\n        style={{ width: '100%' }}\n        loading='lazy'\n      />\n      <FavoriteItemCard.ImgOverlay className='text-center'>\n        <Heading3>\n          {favoriteCityName.length > 17\n            ? `${favoriteCityName.slice(0, 15)}...`\n            : favoriteCityName}\n        </Heading3>\n        <img\n          src={`/img/weather-icons/${WeatherIcon}-s.png`}\n          alt='weather icon'\n          className='column'\n          loading='lazy'\n        />\n        <FavoriteCardText>{roundedTemperature} &deg;</FavoriteCardText>\n      </FavoriteItemCard.ImgOverlay>{' '}\n    </FavoriteItemCard>\n  )\n}\n\nFavoriteItem.propTypes = {\n  favoriteCityName: PropTypes.string.isRequired,\n  cityKey: PropTypes.string.isRequired,\n  weather: PropTypes.object.isRequired,\n}\n\nexport default FavoriteItem\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from'react';import SearchLocation from'../SearchLocation/SearchLocation';import WeatherIcons from'../../services/WeatherIcons/WeatherIcons';import{ReactComponent as Showers}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/weather-icons/rain-2.svg\";import'./CurrentWeather.css';function CurrentWeather(props){var locationName=props.locationName;var currentConditions=props.currentConditions;var currentTime=new Date(currentConditions.EpochTime*1000);var days=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];return/*#__PURE__*/React.createElement(\"aside\",{className:\"CurrentWeather\"},/*#__PURE__*/React.createElement(SearchLocation,null),/*#__PURE__*/React.createElement(\"h1\",null,\"\".concat(locationName.city,\", \").concat(locationName.country)),WeatherIcons(currentConditions.WeatherIcon,'current-weather-icon'),/*#__PURE__*/React.createElement(\"p\",{className:\"current-temperature\"},\"\".concat(Math.round(currentConditions.Temperature.Metric.Value),\"\\xB0C\")),/*#__PURE__*/React.createElement(\"p\",{className:\"current-time\"},\"\".concat(days[currentTime.getDay()],\", \").concat(currentTime.getHours(),\":\").concat(currentTime.getMinutes())),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"details\"},WeatherIcons(currentConditions.WeatherIcon,'current-details'),/*#__PURE__*/React.createElement(\"p\",null,currentConditions.WeatherText)),/*#__PURE__*/React.createElement(\"div\",{className:\"precipitation\"},/*#__PURE__*/React.createElement(Showers,{className:\"current-precipitation\"}),/*#__PURE__*/React.createElement(\"p\",null,\"Precipitation - \",currentConditions.PrecipitationSummary.Precipitation.Metric.Value,\"mm\")));}export default CurrentWeather;","map":{"version":3,"sources":["C:/Users/giojo/OneDrive/Área de Trabalho/Development/Herolo_Assign/react-weather-app-herolo/src/components/CurrentWeather/CurrentWeather.js"],"names":["React","SearchLocation","WeatherIcons","CurrentWeather","props","locationName","currentConditions","currentTime","Date","EpochTime","days","city","country","WeatherIcon","Math","round","Temperature","Metric","Value","getDay","getHours","getMinutes","WeatherText","PrecipitationSummary","Precipitation"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,C,iHAEA,MAAO,sBAAP,CAEA,QAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CAC3B,GAAMC,CAAAA,YAAY,CAAGD,KAAK,CAACC,YAA3B,CACA,GAAMC,CAAAA,iBAAiB,CAAGF,KAAK,CAACE,iBAAhC,CACA,GAAMC,CAAAA,WAAW,CAAG,GAAIC,CAAAA,IAAJ,CAASF,iBAAiB,CAACG,SAAlB,CAA8B,IAAvC,CAApB,CACA,GAAMC,CAAAA,IAAI,CAAG,CACT,QADS,CAET,QAFS,CAGT,SAHS,CAIT,WAJS,CAKT,UALS,CAMT,QANS,CAOT,UAPS,CAAb,CAUA,mBACI,6BAAO,SAAS,CAAC,gBAAjB,eACI,oBAAC,cAAD,MADJ,cAEI,wCAASL,YAAY,CAACM,IAAtB,cAA+BN,YAAY,CAACO,OAA5C,EAFJ,CAGMV,YAAY,CAACI,iBAAiB,CAACO,WAAnB,CAAgC,sBAAhC,CAHlB,cAII,yBAAG,SAAS,CAAC,qBAAb,YAAwCC,IAAI,CAACC,KAAL,CAAWT,iBAAiB,CAACU,WAAlB,CAA8BC,MAA9B,CAAqCC,KAAhD,CAAxC,UAJJ,cAKI,yBAAG,SAAS,CAAC,cAAb,YAAiCR,IAAI,CAACH,WAAW,CAACY,MAAZ,EAAD,CAArC,cAAgEZ,WAAW,CAACa,QAAZ,EAAhE,aAA0Fb,WAAW,CAACc,UAAZ,EAA1F,EALJ,cAMI,8BANJ,cAOI,2BAAK,SAAS,CAAC,SAAf,EACMnB,YAAY,CAACI,iBAAiB,CAACO,WAAnB,CAAgC,iBAAhC,CADlB,cAEI,6BAAKP,iBAAiB,CAACgB,WAAvB,CAFJ,CAPJ,cAWI,2BAAK,SAAS,CAAC,eAAf,eACI,oBAAC,OAAD,EAAS,SAAS,CAAC,uBAAnB,EADJ,cAEI,gDAAoBhB,iBAAiB,CAACiB,oBAAlB,CAAuCC,aAAvC,CAAqDP,MAArD,CAA4DC,KAAhF,MAFJ,CAXJ,CADJ,CAkBH,CAED,cAAef,CAAAA,cAAf","sourcesContent":["import React from 'react';\nimport SearchLocation from '../SearchLocation/SearchLocation';\nimport WeatherIcons from '../../services/WeatherIcons/WeatherIcons';\nimport { ReactComponent as Showers } from '../../assets/weather-icons/rain-2.svg';\nimport './CurrentWeather.css';\n\nfunction CurrentWeather(props) {\n    const locationName = props.locationName;\n    const currentConditions = props.currentConditions;\n    const currentTime = new Date(currentConditions.EpochTime * 1000);\n    const days = [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ];\n\n    return (\n        <aside className='CurrentWeather'>\n            <SearchLocation />\n            <h1>{ `${locationName.city}, ${locationName.country}` }</h1>\n            { WeatherIcons(currentConditions.WeatherIcon, 'current-weather-icon') }\n            <p className='current-temperature'>{ `${Math.round(currentConditions.Temperature.Metric.Value)}°C` }</p>\n            <p className='current-time'>{ `${days[currentTime.getDay()]}, ${currentTime.getHours()}:${currentTime.getMinutes()}` }</p>\n            <hr></hr>\n            <div className='details'>\n                { WeatherIcons(currentConditions.WeatherIcon, 'current-details') }\n                <p>{ currentConditions.WeatherText }</p>\n            </div>\n            <div className='precipitation'>\n                <Showers className='current-precipitation' />\n                <p>Precipitation - {currentConditions.PrecipitationSummary.Precipitation.Metric.Value}mm</p>\n            </div>\n        </aside>\n    );\n}\n\nexport default CurrentWeather;"]},"metadata":{},"sourceType":"module"}
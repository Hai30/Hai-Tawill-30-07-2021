{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\giojo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Development\\\\Herolo_Assign\\\\react-weather-app-herolo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\giojo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Development\\\\Herolo_Assign\\\\react-weather-app-herolo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\giojo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Development\\\\Herolo_Assign\\\\react-weather-app-herolo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./SearchLocation.css';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSearch,faCompass}from'@fortawesome/free-solid-svg-icons';import apiUtils from'../../api/apiUtils';function SearchLocation(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),places=_useState2[0],setPlaces=_useState2[1];var _useState3=useState({locationName:'',locationKey:''}),_useState4=_slicedToArray(_useState3,2),input=_useState4[0],setInput=_useState4[1];var hideAutocompleteList=function hideAutocompleteList(){return document.querySelector('.autocomplete-list').style.display='none';};var showAutocompleteList=function showAutocompleteList(event){var inputValue=event.target.value;if(inputValue.length>0){return document.querySelector('.autocomplete-list').style.display='block';}};var searchLocation=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var inputValue,autoCompleteList;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:inputValue=event.target.value;autoCompleteList=document.querySelector('.autocomplete-list');setInput({locationName:inputValue});if(!(inputValue.length<=1)){_context.next=7;break;}return _context.abrupt(\"return\",autoCompleteList.style.display='none');case 7:if(!(inputValue.length>0)){_context.next=11;break;}_context.next=10;return fetch(\"https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=\".concat(apiUtils.accuWeather.apiKey,\"&q=\").concat(inputValue)).then(function(response){return response.json();}).then(function(data){return setPlaces(data);});case 10:autoCompleteList.style.display='block';case 11:case\"end\":return _context.stop();}}},_callee);}));return function searchLocation(_x){return _ref.apply(this,arguments);};}();var selectLocation=function selectLocation(props){var urlParams=new URLSearchParams(window.location.search);urlParams.set('locationKey',props.locationKey);window.location.search=urlParams;setInput({locationName:\"\".concat(props.city,\", \").concat(props.country),locationKey:props.locationKey});};function Item(props){return/*#__PURE__*/React.createElement(\"div\",{className:\"autocomplete-item\",onMouseDown:function onMouseDown(){return selectLocation(props);}},\"\".concat(props.city,\", \").concat(props.country));};return/*#__PURE__*/React.createElement(\"form\",{className:\"search-form\",autoComplete:\"off\"},/*#__PURE__*/React.createElement(\"div\",{className:\"search-container\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-icon-container\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSearch}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"search-input\",placeholder:\"Search for places...\",onBlur:hideAutocompleteList,onChange:searchLocation,onFocus:showAutocompleteList,value:input.locationName})),/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCompass}),/*#__PURE__*/React.createElement(\"div\",{className:\"autocomplete-list\"},places.length>0?places.map(function(place,idx){return/*#__PURE__*/React.createElement(Item,{key:idx,city:place.LocalizedName,country:place.Country.LocalizedName,locationKey:place.Key,t:true});}):/*#__PURE__*/React.createElement(\"div\",{className:\"autocomplete-item\"},\"Places not found.\"))));}export default SearchLocation;","map":{"version":3,"sources":["C:/Users/giojo/OneDrive/Área de Trabalho/Development/Herolo_Assign/react-weather-app-herolo/src/components/SearchLocation/SearchLocation.js"],"names":["React","useState","FontAwesomeIcon","faSearch","faCompass","apiUtils","SearchLocation","places","setPlaces","locationName","locationKey","input","setInput","hideAutocompleteList","document","querySelector","style","display","showAutocompleteList","event","inputValue","target","value","length","searchLocation","autoCompleteList","fetch","accuWeather","apiKey","then","response","json","data","selectLocation","props","urlParams","URLSearchParams","window","location","search","set","city","country","Item","map","place","idx","LocalizedName","Country","Key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './SearchLocation.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faCompass } from '@fortawesome/free-solid-svg-icons';\nimport apiUtils from '../../api/apiUtils';\n\nfunction SearchLocation() {\n    const [places, setPlaces] = useState([]);\n    const [input, setInput] = useState({ locationName: '', locationKey: ''});\n\n    const hideAutocompleteList = () => {\n        return document.querySelector('.autocomplete-list').style.display = 'none';\n    };\n\n    const showAutocompleteList = event => {\n        let inputValue = event.target.value;\n        if(inputValue.length > 0) {\n            return document.querySelector('.autocomplete-list').style.display = 'block';\n        }\n    };\n\n    const searchLocation = async event => {\n        let inputValue = event.target.value;\n        let autoCompleteList = document.querySelector('.autocomplete-list');\n\n        setInput({ locationName: inputValue });\n\n        if(inputValue.length <= 1) {\n            return autoCompleteList.style.display = 'none';\n        } else if(inputValue.length > 0){\n            await fetch(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${ apiUtils.accuWeather.apiKey }&q=${ inputValue }`)\n            .then(response => response.json())\n            .then(data => setPlaces(data));\n\n            autoCompleteList.style.display = 'block';\n        }\n    };\n\n    const selectLocation = (props) => {\n        const urlParams = new URLSearchParams(window.location.search);\n        urlParams.set('locationKey', props.locationKey);\n        window.location.search = urlParams;\n\n        setInput({ locationName: `${props.city}, ${props.country}`, locationKey: props.locationKey});\n    };\n\n    function Item(props) {\n        return (\n            <div className='autocomplete-item' onMouseDown={ () => selectLocation(props) }>{`${ props.city }, ${ props.country }`}</div>\n        );\n    };\n\n    return (\n        <form className='search-form' autoComplete='off'>\n            <div className='search-container'>\n                <span className='input-icon-container'>\n                    <FontAwesomeIcon icon={ faSearch }></FontAwesomeIcon>\n                    <input type='text' className='search-input' placeholder='Search for places...' onBlur={ hideAutocompleteList } \n                    onChange={ searchLocation } onFocus={ showAutocompleteList } value={ input.locationName }></input>\n                </span>\n                <FontAwesomeIcon icon={ faCompass }></FontAwesomeIcon>\n                <div className='autocomplete-list'>\n                    { places.length > 0 ?\n                    places.map((place, idx) => {\n                        return <Item key={ idx } city={ place.LocalizedName } country={ place.Country.LocalizedName } locationKey={ place.Key } t />\n                    }) : <div className='autocomplete-item'>Places not found.</div> }\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default SearchLocation;"]},"metadata":{},"sourceType":"module"}